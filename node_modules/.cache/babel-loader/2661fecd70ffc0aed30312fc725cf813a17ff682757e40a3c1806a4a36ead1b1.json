{"ast":null,"code":"import { collection, getDocs, addDoc, query, where, doc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\n// Sample car data with updated image URLs\nconst sampleCars = [{\n  name: 'Toyota Camry',\n  type: 'Sedan',\n  pricePerKm: 0.85,\n  features: ['Air Conditioning', 'Bluetooth', 'Cruise Control', 'Backup Camera'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Honda CR-V',\n  type: 'SUV',\n  pricePerKm: 1.2,\n  features: ['All-Wheel Drive', 'Navigation System', 'Heated Seats', 'Sunroof'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1568844293988-39252f3580e9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Ford F-150',\n  type: 'Truck',\n  pricePerKm: 1.5,\n  features: ['4x4', 'Towing Package', 'Bedliner', 'Large Cargo Space'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'BMW 5 Series',\n  type: 'Luxury',\n  pricePerKm: 2.5,\n  features: ['Leather Seats', 'Premium Sound System', 'Adaptive Cruise Control', 'Parking Assistant'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1555215695-3004980ad54e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Tesla Model 3',\n  type: 'Electric',\n  pricePerKm: 2.0,\n  features: ['Autopilot', 'All-Electric', 'Touchscreen Display', 'Long Range Battery'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1560958089-b8a1929cea89?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Toyota Sienna',\n  type: 'Van',\n  pricePerKm: 1.3,\n  features: ['8 Passenger Seating', 'Sliding Doors', 'Rear Entertainment System', 'Storage Space'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}];\n\n// Check if cars exist, if not, initialize with sample data\nexport const initializeCars = async () => {\n  try {\n    // Check if any cars exist\n    let carsExist = false;\n    try {\n      const carsSnapshot = await getDocs(collection(db, 'cars'));\n      carsExist = !carsSnapshot.empty;\n    } catch (error) {\n      console.log('Error checking cars, will attempt to create them:', error.message);\n    }\n    if (!carsExist) {\n      console.log('Initializing cars collection with sample data...');\n\n      // Add sample cars\n      for (const car of sampleCars) {\n        try {\n          await addDoc(collection(db, 'cars'), {\n            ...car,\n            createdAt: new Date().toISOString()\n          });\n        } catch (addError) {\n          console.error('Error adding car:', addError);\n          // Continue with next car even if this one fails\n        }\n      }\n      console.log('Sample cars added successfully!');\n    } else {\n      console.log('Cars collection already contains data.');\n    }\n  } catch (error) {\n    console.error('Error initializing cars collection:', error);\n  }\n};\n\n// Check for admin user more safely\nexport const initializeAdmin = async () => {\n  try {\n    console.log('Checking for admin users...');\n    // We'll skip checking for admin users to avoid permission issues\n    // The adminSetup.js will handle this more appropriately\n  } catch (error) {\n    console.error('Error checking for admin user:', error);\n  }\n};\n\n// Main initialization function\nexport const initializeFirestore = async () => {\n  try {\n    // Attempt to initialize data - will succeed if permissions allow\n    initializeCars().catch(error => console.log('Cars initialization error (non-critical):', error.message));\n    // We don't need to wait for these operations to complete\n\n    console.log('Firestore initialization attempted.');\n  } catch (error) {\n    console.error('Error during Firestore initialization (non-critical):', error);\n    // App can still function without initialization\n  }\n};","map":{"version":3,"names":["collection","getDocs","addDoc","query","where","doc","setDoc","db","sampleCars","name","type","pricePerKm","features","isAvailable","imageUrl","initializeCars","carsExist","carsSnapshot","empty","error","console","log","message","car","createdAt","Date","toISOString","addError","initializeAdmin","initializeFirestore","catch"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/utils/initFirestore.js"],"sourcesContent":["import { collection, getDocs, addDoc, query, where, doc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\n// Sample car data with updated image URLs\nconst sampleCars = [\n  {\n    name: 'Toyota Camry',\n    type: 'Sedan',\n    pricePerKm: 0.85,\n    features: ['Air Conditioning', 'Bluetooth', 'Cruise Control', 'Backup Camera'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Honda CR-V',\n    type: 'SUV',\n    pricePerKm: 1.2,\n    features: ['All-Wheel Drive', 'Navigation System', 'Heated Seats', 'Sunroof'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1568844293988-39252f3580e9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Ford F-150',\n    type: 'Truck',\n    pricePerKm: 1.5,\n    features: ['4x4', 'Towing Package', 'Bedliner', 'Large Cargo Space'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'BMW 5 Series',\n    type: 'Luxury',\n    pricePerKm: 2.5,\n    features: ['Leather Seats', 'Premium Sound System', 'Adaptive Cruise Control', 'Parking Assistant'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1555215695-3004980ad54e?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Tesla Model 3',\n    type: 'Electric',\n    pricePerKm: 2.0,\n    features: ['Autopilot', 'All-Electric', 'Touchscreen Display', 'Long Range Battery'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1560958089-b8a1929cea89?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Toyota Sienna',\n    type: 'Van',\n    pricePerKm: 1.3,\n    features: ['8 Passenger Seating', 'Sliding Doors', 'Rear Entertainment System', 'Storage Space'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  }\n];\n\n// Check if cars exist, if not, initialize with sample data\nexport const initializeCars = async () => {\n  try {\n    // Check if any cars exist\n    let carsExist = false;\n    try {\n      const carsSnapshot = await getDocs(collection(db, 'cars'));\n      carsExist = !carsSnapshot.empty;\n    } catch (error) {\n      console.log('Error checking cars, will attempt to create them:', error.message);\n    }\n    \n    if (!carsExist) {\n      console.log('Initializing cars collection with sample data...');\n      \n      // Add sample cars\n      for (const car of sampleCars) {\n        try {\n          await addDoc(collection(db, 'cars'), {\n            ...car,\n            createdAt: new Date().toISOString()\n          });\n        } catch (addError) {\n          console.error('Error adding car:', addError);\n          // Continue with next car even if this one fails\n        }\n      }\n      \n      console.log('Sample cars added successfully!');\n    } else {\n      console.log('Cars collection already contains data.');\n    }\n  } catch (error) {\n    console.error('Error initializing cars collection:', error);\n  }\n};\n\n// Check for admin user more safely\nexport const initializeAdmin = async () => {\n  try {\n    console.log('Checking for admin users...');\n    // We'll skip checking for admin users to avoid permission issues\n    // The adminSetup.js will handle this more appropriately\n  } catch (error) {\n    console.error('Error checking for admin user:', error);\n  }\n};\n\n// Main initialization function\nexport const initializeFirestore = async () => {\n  try {\n    // Attempt to initialize data - will succeed if permissions allow\n    initializeCars().catch(error => console.log('Cars initialization error (non-critical):', error.message));\n    // We don't need to wait for these operations to complete\n    \n    console.log('Firestore initialization attempted.');\n  } catch (error) {\n    console.error('Error during Firestore initialization (non-critical):', error);\n    // App can still function without initialization\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}