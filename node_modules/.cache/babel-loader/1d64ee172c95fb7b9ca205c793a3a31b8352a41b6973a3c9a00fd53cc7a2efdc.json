{"ast":null,"code":"// Google Maps API configuration\nexport const GOOGLE_MAPS_API_KEY = 'AIzaSyAcPWc_ldxRswRJYu-9zqSAW0-QWt1WqXc';\n\n// Helper function to load the Google Maps API\nexport const loadGoogleMapsApi = callback => {\n  // Check if API is already loaded\n  if (window.google && window.google.maps) {\n    if (callback) callback();\n    return;\n  }\n\n  // Track loading to prevent multiple loads\n  if (window._googleMapsLoading) {\n    // If API is already loading, wait for it\n    if (callback) {\n      const prevCallback = window._googleMapsCallback;\n      window._googleMapsCallback = () => {\n        if (prevCallback) prevCallback();\n        callback();\n      };\n    }\n    return;\n  }\n\n  // Set loading flag\n  window._googleMapsLoading = true;\n\n  // Create a global callback function\n  const callbackName = '_googleMapsInitCallback_' + Math.random().toString(36).substr(2, 9);\n  window[callbackName] = () => {\n    if (callback) callback();\n    if (window._googleMapsCallback) window._googleMapsCallback();\n    delete window[callbackName];\n    delete window._googleMapsLoading;\n    delete window._googleMapsCallback;\n  };\n\n  // Create the script element with proper callback parameter\n  const googleMapsScript = document.createElement('script');\n  googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places&callback=${callbackName}`;\n  googleMapsScript.async = true;\n  googleMapsScript.defer = true;\n\n  // Add the script to the document\n  document.head.appendChild(googleMapsScript);\n  return googleMapsScript;\n};\n\n// Helper to clean up Google Maps API script\nexport const cleanupGoogleMapsApi = () => {\n  const script = document.querySelector(`script[src*=\"maps.googleapis.com/maps/api\"]`);\n  if (script) {\n    script.remove();\n  }\n};","map":{"version":3,"names":["GOOGLE_MAPS_API_KEY","loadGoogleMapsApi","callback","window","google","maps","_googleMapsLoading","prevCallback","_googleMapsCallback","callbackName","Math","random","toString","substr","googleMapsScript","document","createElement","src","async","defer","head","appendChild","cleanupGoogleMapsApi","script","querySelector","remove"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/utils/googleMapsConfig.js"],"sourcesContent":["// Google Maps API configuration\nexport const GOOGLE_MAPS_API_KEY = 'AIzaSyAcPWc_ldxRswRJYu-9zqSAW0-QWt1WqXc';\n\n// Helper function to load the Google Maps API\nexport const loadGoogleMapsApi = (callback) => {\n  // Check if API is already loaded\n  if (window.google && window.google.maps) {\n    if (callback) callback();\n    return;\n  }\n  \n  // Track loading to prevent multiple loads\n  if (window._googleMapsLoading) {\n    // If API is already loading, wait for it\n    if (callback) {\n      const prevCallback = window._googleMapsCallback;\n      window._googleMapsCallback = () => {\n        if (prevCallback) prevCallback();\n        callback();\n      };\n    }\n    return;\n  }\n  \n  // Set loading flag\n  window._googleMapsLoading = true;\n  \n  // Create a global callback function\n  const callbackName = '_googleMapsInitCallback_' + Math.random().toString(36).substr(2, 9);\n  window[callbackName] = () => {\n    if (callback) callback();\n    if (window._googleMapsCallback) window._googleMapsCallback();\n    delete window[callbackName];\n    delete window._googleMapsLoading;\n    delete window._googleMapsCallback;\n  };\n  \n  // Create the script element with proper callback parameter\n  const googleMapsScript = document.createElement('script');\n  googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places&callback=${callbackName}`;\n  googleMapsScript.async = true;\n  googleMapsScript.defer = true;\n  \n  // Add the script to the document\n  document.head.appendChild(googleMapsScript);\n  \n  return googleMapsScript;\n};\n\n// Helper to clean up Google Maps API script\nexport const cleanupGoogleMapsApi = () => {\n  const script = document.querySelector(`script[src*=\"maps.googleapis.com/maps/api\"]`);\n  if (script) {\n    script.remove();\n  }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,mBAAmB,GAAG,yCAAyC;;AAE5E;AACA,OAAO,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;EAC7C;EACA,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;IACvC,IAAIH,QAAQ,EAAEA,QAAQ,CAAC,CAAC;IACxB;EACF;;EAEA;EACA,IAAIC,MAAM,CAACG,kBAAkB,EAAE;IAC7B;IACA,IAAIJ,QAAQ,EAAE;MACZ,MAAMK,YAAY,GAAGJ,MAAM,CAACK,mBAAmB;MAC/CL,MAAM,CAACK,mBAAmB,GAAG,MAAM;QACjC,IAAID,YAAY,EAAEA,YAAY,CAAC,CAAC;QAChCL,QAAQ,CAAC,CAAC;MACZ,CAAC;IACH;IACA;EACF;;EAEA;EACAC,MAAM,CAACG,kBAAkB,GAAG,IAAI;;EAEhC;EACA,MAAMG,YAAY,GAAG,0BAA0B,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACzFV,MAAM,CAACM,YAAY,CAAC,GAAG,MAAM;IAC3B,IAAIP,QAAQ,EAAEA,QAAQ,CAAC,CAAC;IACxB,IAAIC,MAAM,CAACK,mBAAmB,EAAEL,MAAM,CAACK,mBAAmB,CAAC,CAAC;IAC5D,OAAOL,MAAM,CAACM,YAAY,CAAC;IAC3B,OAAON,MAAM,CAACG,kBAAkB;IAChC,OAAOH,MAAM,CAACK,mBAAmB;EACnC,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EACzDF,gBAAgB,CAACG,GAAG,GAAG,+CAA+CjB,mBAAmB,8BAA8BS,YAAY,EAAE;EACrIK,gBAAgB,CAACI,KAAK,GAAG,IAAI;EAC7BJ,gBAAgB,CAACK,KAAK,GAAG,IAAI;;EAE7B;EACAJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,gBAAgB,CAAC;EAE3C,OAAOA,gBAAgB;AACzB,CAAC;;AAED;AACA,OAAO,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;EACxC,MAAMC,MAAM,GAAGR,QAAQ,CAACS,aAAa,CAAC,6CAA6C,CAAC;EACpF,IAAID,MAAM,EAAE;IACVA,MAAM,CAACE,MAAM,CAAC,CAAC;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}