{"ast":null,"code":"var _jsxFileName = \"/Users/yeduruabhiram/Desktop/chiru babai/src/pages/auth/AdminLoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLoginPage = () => {\n  _s();\n  // Pre-populate with admin credentials for easy access\n  const [email, setEmail] = useState('mentneo6@gmail.com');\n  const [password, setPassword] = useState('itsmeiamabhi');\n  const [loading, setLoading] = useState(false);\n  const {\n    login,\n    currentUser,\n    userRole\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If user is already logged in as admin, redirect to admin dashboard\n    if (currentUser && userRole === 'admin') {\n      navigate('/admin/dashboard');\n    }\n  }, [currentUser, userRole, navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Please fill all fields');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Check if the email belongs to an admin account\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('email', '==', email), where('role', '==', 'admin'));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        toast.error('Access denied. This portal is for administrators only.');\n        setLoading(false);\n        return;\n      }\n\n      // Proceed with login\n      await login(email, password);\n      toast.success('Login successful!');\n      navigate('/admin/dashboard');\n    } catch (error) {\n      let errorMessage = 'Failed to login.';\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n        errorMessage = 'Invalid email or password';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many failed attempts. Please try again later.';\n      }\n      toast.error(errorMessage);\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-6 text-center text-3xl font-extrabold text-gray-900\",\n          children: \"Admin Portal Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-center text-sm text-gray-600\",\n          children: \"Secure access for administrators only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-8 space-y-6\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-md shadow-sm -space-y-px\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email-address\",\n              className: \"sr-only\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email-address\",\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true,\n              className: \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\",\n              placeholder: \"Admin Email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"sr-only\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"current-password\",\n              required: true,\n              className: \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\",\n            children: loading ? 'Signing in...' : 'Sign in to Admin Portal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLoginPage, \"2F53q4WmBvxxnXfRXxdNrPhpobM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AdminLoginPage;\nexport default AdminLoginPage;\nvar _c;\n$RefreshReg$(_c, \"AdminLoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","toast","collection","query","where","getDocs","db","jsxDEV","_jsxDEV","AdminLoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","login","currentUser","userRole","navigate","handleSubmit","e","preventDefault","error","usersRef","q","querySnapshot","empty","success","errorMessage","code","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","type","autoComplete","required","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/pages/auth/AdminLoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase/config';\n\nconst AdminLoginPage = () => {\n  // Pre-populate with admin credentials for easy access\n  const [email, setEmail] = useState('mentneo6@gmail.com');\n  const [password, setPassword] = useState('itsmeiamabhi');\n  const [loading, setLoading] = useState(false);\n  const { login, currentUser, userRole } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // If user is already logged in as admin, redirect to admin dashboard\n    if (currentUser && userRole === 'admin') {\n      navigate('/admin/dashboard');\n    }\n  }, [currentUser, userRole, navigate]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!email || !password) {\n      toast.error('Please fill all fields');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      // Check if the email belongs to an admin account\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('email', '==', email), where('role', '==', 'admin'));\n      const querySnapshot = await getDocs(q);\n      \n      if (querySnapshot.empty) {\n        toast.error('Access denied. This portal is for administrators only.');\n        setLoading(false);\n        return;\n      }\n      \n      // Proceed with login\n      await login(email, password);\n      \n      toast.success('Login successful!');\n      navigate('/admin/dashboard');\n    } catch (error) {\n      let errorMessage = 'Failed to login.';\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n        errorMessage = 'Invalid email or password';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many failed attempts. Please try again later.';\n      }\n      toast.error(errorMessage);\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n      <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-lg\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Admin Portal Login\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Secure access for administrators only\n          </p>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email-address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Admin Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              {loading ? 'Signing in...' : 'Sign in to Admin Portal'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}