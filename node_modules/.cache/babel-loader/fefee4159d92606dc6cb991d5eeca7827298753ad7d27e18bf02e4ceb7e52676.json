{"ast":null,"code":"var _jsxFileName = \"/Users/yeduruabhiram/Desktop/chiru babai/src/components/Notifications/NotificationComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { onMessageListener } from '../../firebase/config';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationComponent = () => {\n  _s();\n  const [notification, setNotification] = useState({\n    title: '',\n    body: ''\n  });\n  useEffect(() => {\n    // Set up listener for foreground messages\n    const unsubscribePromise = onMessageListener();\n    unsubscribePromise.then(payload => {\n      if (payload) {\n        setNotification({\n          title: payload.notification.title,\n          body: payload.notification.body\n        });\n\n        // Show toast notification\n        toast.info(/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold\",\n            children: payload.notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: payload.notification.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), {\n          autoClose: 5000\n        });\n      }\n    }).catch(err => console.log('Failed to set up notification listener:', err));\n    return () => {\n      // Clean up the listener\n      // Note: Since onMessageListener returns a Promise, we can't directly unsubscribe\n      // The Firebase messaging listener is managed internally\n    };\n  }, []);\n  return null; // This component doesn't render anything, it just handles notifications\n};\n_s(NotificationComponent, \"HGfEWb8aVLpaktaqEP3dQ5NzIuk=\");\n_c = NotificationComponent;\nexport default NotificationComponent;\nvar _c;\n$RefreshReg$(_c, \"NotificationComponent\");","map":{"version":3,"names":["React","useState","useEffect","onMessageListener","toast","jsxDEV","_jsxDEV","NotificationComponent","_s","notification","setNotification","title","body","unsubscribePromise","then","payload","info","children","className","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","catch","err","console","log","_c","$RefreshReg$"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/components/Notifications/NotificationComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { onMessageListener } from '../../firebase/config';\nimport { toast } from 'react-toastify';\n\nconst NotificationComponent = () => {\n  const [notification, setNotification] = useState({ title: '', body: '' });\n\n  useEffect(() => {\n    // Set up listener for foreground messages\n    const unsubscribePromise = onMessageListener();\n    \n    unsubscribePromise.then((payload) => {\n      if (payload) {\n        setNotification({\n          title: payload.notification.title,\n          body: payload.notification.body\n        });\n        \n        // Show toast notification\n        toast.info(\n          <div>\n            <h4 className=\"font-bold\">{payload.notification.title}</h4>\n            <p>{payload.notification.body}</p>\n          </div>, \n          {\n            autoClose: 5000\n          }\n        );\n      }\n    }).catch(err => console.log('Failed to set up notification listener:', err));\n\n    return () => {\n      // Clean up the listener\n      // Note: Since onMessageListener returns a Promise, we can't directly unsubscribe\n      // The Firebase messaging listener is managed internally\n    };\n  }, []);\n\n  return null; // This component doesn't render anything, it just handles notifications\n};\n\nexport default NotificationComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEzEV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,kBAAkB,GAAGV,iBAAiB,CAAC,CAAC;IAE9CU,kBAAkB,CAACC,IAAI,CAAEC,OAAO,IAAK;MACnC,IAAIA,OAAO,EAAE;QACXL,eAAe,CAAC;UACdC,KAAK,EAAEI,OAAO,CAACN,YAAY,CAACE,KAAK;UACjCC,IAAI,EAAEG,OAAO,CAACN,YAAY,CAACG;QAC7B,CAAC,CAAC;;QAEF;QACAR,KAAK,CAACY,IAAI,cACRV,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAIY,SAAS,EAAC,WAAW;YAAAD,QAAA,EAAEF,OAAO,CAACN,YAAY,CAACE;UAAK;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3DhB,OAAA;YAAAW,QAAA,EAAIF,OAAO,CAACN,YAAY,CAACG;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,EACN;UACEC,SAAS,EAAE;QACb,CACF,CAAC;MACH;IACF,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,GAAG,CAAC,CAAC;IAE5E,OAAO,MAAM;MACX;MACA;MACA;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACjB,EAAA,CAnCID,qBAAqB;AAAAqB,EAAA,GAArBrB,qBAAqB;AAqC3B,eAAeA,qBAAqB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}