{"ast":null,"code":"/**\n * Returns a placeholder image URL for when an image fails to load\n * @param {string} type - Type of placeholder (car, user, etc.)\n * @returns {string} Placeholder image URL\n */\nexport const getPlaceholderImage = (type = 'car') => {\n  switch (type.toLowerCase()) {\n    case 'car':\n      return 'https://i.imgur.com/wX8duEf.png';\n    // Reliable car image placeholder on Imgur\n    case 'user':\n    case 'driver':\n      return 'https://i.imgur.com/6yCMBzW.png';\n    // Reliable user image placeholder on Imgur\n    default:\n      return 'https://i.imgur.com/W4d3auI.png';\n    // Generic placeholder on Imgur\n  }\n};\n\n/**\n * Image error handler for React components\n * @param {Event} event - The error event\n */\nexport const handleImageError = event => {\n  const target = event.currentTarget;\n  const fallbackType = target.dataset.type || 'car';\n  target.onerror = null; // Prevent infinite loop\n  target.src = getPlaceholderImage(fallbackType);\n};\n\n/**\n * Returns a random car image URL from a reliable source\n * @returns {string} Car image URL\n */\nexport const getRandomCarImage = () => {\n  // Array of reliable car image URLs from Imgur\n  const carImages = ['https://i.imgur.com/wX8duEf.png',\n  // Sedan\n  'https://i.imgur.com/1jzGaHd.png',\n  // SUV\n  'https://i.imgur.com/SyNY5YJ.png',\n  // Luxury\n  'https://i.imgur.com/pSadlTU.png',\n  // Truck\n  'https://i.imgur.com/SSu0YqV.png' // Electric\n  ];\n\n  // Return a random image from the array\n  return carImages[Math.floor(Math.random() * carImages.length)];\n};","map":{"version":3,"names":["getPlaceholderImage","type","toLowerCase","handleImageError","event","target","currentTarget","fallbackType","dataset","onerror","src","getRandomCarImage","carImages","Math","floor","random","length"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/utils/imageFallback.js"],"sourcesContent":["/**\n * Returns a placeholder image URL for when an image fails to load\n * @param {string} type - Type of placeholder (car, user, etc.)\n * @returns {string} Placeholder image URL\n */\nexport const getPlaceholderImage = (type = 'car') => {\n  switch (type.toLowerCase()) {\n    case 'car':\n      return 'https://i.imgur.com/wX8duEf.png'; // Reliable car image placeholder on Imgur\n    case 'user':\n    case 'driver':\n      return 'https://i.imgur.com/6yCMBzW.png'; // Reliable user image placeholder on Imgur\n    default:\n      return 'https://i.imgur.com/W4d3auI.png'; // Generic placeholder on Imgur\n  }\n};\n\n/**\n * Image error handler for React components\n * @param {Event} event - The error event\n */\nexport const handleImageError = (event) => {\n  const target = event.currentTarget;\n  const fallbackType = target.dataset.type || 'car';\n  target.onerror = null; // Prevent infinite loop\n  target.src = getPlaceholderImage(fallbackType);\n};\n\n/**\n * Returns a random car image URL from a reliable source\n * @returns {string} Car image URL\n */\nexport const getRandomCarImage = () => {\n  // Array of reliable car image URLs from Imgur\n  const carImages = [\n    'https://i.imgur.com/wX8duEf.png', // Sedan\n    'https://i.imgur.com/1jzGaHd.png', // SUV\n    'https://i.imgur.com/SyNY5YJ.png', // Luxury\n    'https://i.imgur.com/pSadlTU.png', // Truck\n    'https://i.imgur.com/SSu0YqV.png'  // Electric\n  ];\n  \n  // Return a random image from the array\n  return carImages[Math.floor(Math.random() * carImages.length)];\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,mBAAmB,GAAGA,CAACC,IAAI,GAAG,KAAK,KAAK;EACnD,QAAQA,IAAI,CAACC,WAAW,CAAC,CAAC;IACxB,KAAK,KAAK;MACR,OAAO,iCAAiC;IAAE;IAC5C,KAAK,MAAM;IACX,KAAK,QAAQ;MACX,OAAO,iCAAiC;IAAE;IAC5C;MACE,OAAO,iCAAiC;IAAE;EAC9C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EACzC,MAAMC,MAAM,GAAGD,KAAK,CAACE,aAAa;EAClC,MAAMC,YAAY,GAAGF,MAAM,CAACG,OAAO,CAACP,IAAI,IAAI,KAAK;EACjDI,MAAM,CAACI,OAAO,GAAG,IAAI,CAAC,CAAC;EACvBJ,MAAM,CAACK,GAAG,GAAGV,mBAAmB,CAACO,YAAY,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;EACrC;EACA,MAAMC,SAAS,GAAG,CAChB,iCAAiC;EAAE;EACnC,iCAAiC;EAAE;EACnC,iCAAiC;EAAE;EACnC,iCAAiC;EAAE;EACnC,iCAAiC,CAAE;EAAA,CACpC;;EAED;EACA,OAAOA,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;AAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}