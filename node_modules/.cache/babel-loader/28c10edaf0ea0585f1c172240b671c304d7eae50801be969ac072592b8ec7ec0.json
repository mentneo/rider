{"ast":null,"code":"import { collection, getDocs, addDoc, query, where } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\n// Sample car data\nconst sampleCars = [{\n  name: 'Toyota Camry',\n  type: 'Sedan',\n  pricePerKm: 0.85,\n  features: ['Air Conditioning', 'Bluetooth', 'Cruise Control', 'Backup Camera'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1550355291-bbee04a92027?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Honda CR-V',\n  type: 'SUV',\n  pricePerKm: 1.2,\n  features: ['All-Wheel Drive', 'Navigation System', 'Heated Seats', 'Sunroof'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Ford F-150',\n  type: 'Truck',\n  pricePerKm: 1.5,\n  features: ['4x4', 'Towing Package', 'Bedliner', 'Large Cargo Space'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1583798125409-1c979af24595?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'BMW 5 Series',\n  type: 'Luxury',\n  pricePerKm: 2.5,\n  features: ['Leather Seats', 'Premium Sound System', 'Adaptive Cruise Control', 'Parking Assistant'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1523983388277-336a66bf9bcd?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Tesla Model 3',\n  type: 'Electric',\n  pricePerKm: 2.0,\n  features: ['Autopilot', 'All-Electric', 'Touchscreen Display', 'Long Range Battery'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1561580125-028ee3bd62eb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}, {\n  name: 'Toyota Sienna',\n  type: 'Van',\n  pricePerKm: 1.3,\n  features: ['8 Passenger Seating', 'Sliding Doors', 'Rear Entertainment System', 'Storage Space'],\n  isAvailable: true,\n  imageUrl: 'https://images.unsplash.com/photo-1604004218771-7e68e7bfe212?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n}];\n\n// Check if cars exist, if not, initialize with sample data\nexport const initializeCars = async () => {\n  try {\n    // Check if any cars exist\n    const carsSnapshot = await getDocs(collection(db, 'cars'));\n    if (carsSnapshot.empty) {\n      console.log('Initializing cars collection with sample data...');\n\n      // Add sample cars\n      for (const car of sampleCars) {\n        await addDoc(collection(db, 'cars'), {\n          ...car,\n          createdAt: new Date().toISOString()\n        });\n      }\n      console.log('Sample cars added successfully!');\n    } else {\n      console.log('Cars collection already contains data.');\n    }\n  } catch (error) {\n    console.error('Error initializing cars collection:', error);\n  }\n};\n\n// Initialize admin user if it doesn't exist\nexport const initializeAdmin = async () => {\n  try {\n    // Check if admin exists\n    const adminQuery = query(collection(db, 'users'), where('role', '==', 'admin'));\n    const adminSnapshot = await getDocs(adminQuery);\n    if (adminSnapshot.empty) {\n      console.log('Please register an admin user and update their role to \"admin\" in the Firebase console.');\n    } else {\n      console.log('Admin user already exists.');\n    }\n  } catch (error) {\n    console.error('Error checking for admin user:', error);\n  }\n};\n\n// Main initialization function\nexport const initializeFirestore = async () => {\n  try {\n    await initializeCars();\n    await initializeAdmin();\n    console.log('Firestore initialization completed.');\n  } catch (error) {\n    console.error('Error during Firestore initialization:', error);\n  }\n};","map":{"version":3,"names":["collection","getDocs","addDoc","query","where","db","sampleCars","name","type","pricePerKm","features","isAvailable","imageUrl","initializeCars","carsSnapshot","empty","console","log","car","createdAt","Date","toISOString","error","initializeAdmin","adminQuery","adminSnapshot","initializeFirestore"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/utils/initFirestore.js"],"sourcesContent":["import { collection, getDocs, addDoc, query, where } from 'firebase/firestore';\nimport { db } from '../firebase/config';\n\n// Sample car data\nconst sampleCars = [\n  {\n    name: 'Toyota Camry',\n    type: 'Sedan',\n    pricePerKm: 0.85,\n    features: ['Air Conditioning', 'Bluetooth', 'Cruise Control', 'Backup Camera'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1550355291-bbee04a92027?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Honda CR-V',\n    type: 'SUV',\n    pricePerKm: 1.2,\n    features: ['All-Wheel Drive', 'Navigation System', 'Heated Seats', 'Sunroof'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1533473359331-0135ef1b58bf?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Ford F-150',\n    type: 'Truck',\n    pricePerKm: 1.5,\n    features: ['4x4', 'Towing Package', 'Bedliner', 'Large Cargo Space'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1583798125409-1c979af24595?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'BMW 5 Series',\n    type: 'Luxury',\n    pricePerKm: 2.5,\n    features: ['Leather Seats', 'Premium Sound System', 'Adaptive Cruise Control', 'Parking Assistant'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1523983388277-336a66bf9bcd?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Tesla Model 3',\n    type: 'Electric',\n    pricePerKm: 2.0,\n    features: ['Autopilot', 'All-Electric', 'Touchscreen Display', 'Long Range Battery'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1561580125-028ee3bd62eb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  },\n  {\n    name: 'Toyota Sienna',\n    type: 'Van',\n    pricePerKm: 1.3,\n    features: ['8 Passenger Seating', 'Sliding Doors', 'Rear Entertainment System', 'Storage Space'],\n    isAvailable: true,\n    imageUrl: 'https://images.unsplash.com/photo-1604004218771-7e68e7bfe212?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n  }\n];\n\n// Check if cars exist, if not, initialize with sample data\nexport const initializeCars = async () => {\n  try {\n    // Check if any cars exist\n    const carsSnapshot = await getDocs(collection(db, 'cars'));\n    \n    if (carsSnapshot.empty) {\n      console.log('Initializing cars collection with sample data...');\n      \n      // Add sample cars\n      for (const car of sampleCars) {\n        await addDoc(collection(db, 'cars'), {\n          ...car,\n          createdAt: new Date().toISOString()\n        });\n      }\n      \n      console.log('Sample cars added successfully!');\n    } else {\n      console.log('Cars collection already contains data.');\n    }\n  } catch (error) {\n    console.error('Error initializing cars collection:', error);\n  }\n};\n\n// Initialize admin user if it doesn't exist\nexport const initializeAdmin = async () => {\n  try {\n    // Check if admin exists\n    const adminQuery = query(\n      collection(db, 'users'),\n      where('role', '==', 'admin')\n    );\n    \n    const adminSnapshot = await getDocs(adminQuery);\n    \n    if (adminSnapshot.empty) {\n      console.log('Please register an admin user and update their role to \"admin\" in the Firebase console.');\n    } else {\n      console.log('Admin user already exists.');\n    }\n  } catch (error) {\n    console.error('Error checking for admin user:', error);\n  }\n};\n\n// Main initialization function\nexport const initializeFirestore = async () => {\n  try {\n    await initializeCars();\n    await initializeAdmin();\n    console.log('Firestore initialization completed.');\n  } catch (error) {\n    console.error('Error during Firestore initialization:', error);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}