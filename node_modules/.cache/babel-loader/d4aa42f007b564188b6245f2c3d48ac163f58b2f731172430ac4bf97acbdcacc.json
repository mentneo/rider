{"ast":null,"code":"var _jsxFileName = \"/Users/yeduruabhiram/Desktop/chiru babai/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, signInWithPopup, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db, googleProvider, appleProvider, requestNotificationPermission } from '../firebase/config';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for redirect result when component mounts (for Apple auth)\n  useEffect(() => {\n    const checkRedirectResult = async () => {\n      try {\n        const result = await getRedirectResult(auth);\n        if (result && result.user) {\n          // Handle the signed-in user information\n          await handleSocialSignIn(result.user);\n        }\n      } catch (error) {\n        console.error(\"Error with redirect sign-in:\", error);\n        toast.error(\"Error with social sign-in: \" + error.message);\n      }\n    };\n    checkRedirectResult();\n  }, []);\n  async function register(email, password, name, role = 'customer') {\n    try {\n      // Create user in Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Update profile with display name\n      await updateProfile(user, {\n        displayName: name\n      });\n\n      // Add user data to Firestore\n      await setDoc(doc(db, 'users', user.uid), {\n        uid: user.uid,\n        name,\n        email,\n        role,\n        createdAt: new Date().toISOString()\n      });\n\n      // Request notification permission and save FCM token\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken) {\n        await setDoc(doc(db, 'users', user.uid), {\n          fcmToken\n        }, {\n          merge: true\n        });\n      }\n      return user;\n    } catch (error) {\n      console.error('Error in register:', error);\n      throw error;\n    }\n  }\n  async function login(email, password) {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n\n      // After successful login, request notification permission and save FCM token\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken && userCredential.user) {\n        await setDoc(doc(db, 'users', userCredential.user.uid), {\n          fcmToken,\n          lastLogin: new Date().toISOString()\n        }, {\n          merge: true\n        });\n\n        // Show welcome back notification\n        if (Notification.permission === 'granted') {\n          new Notification('Welcome back!', {\n            body: `You've successfully logged in to Car Booking App`,\n            icon: '/logo192.png'\n          });\n        }\n      }\n      return userCredential.user;\n    } catch (error) {\n      console.error('Error in login:', error);\n      throw error;\n    }\n  }\n  async function loginWithGoogle() {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      await handleSocialSignIn(result.user);\n      return result.user;\n    } catch (error) {\n      console.error('Error in Google login:', error);\n      throw error;\n    }\n  }\n  async function loginWithApple() {\n    try {\n      // Apple login works better with redirect on mobile\n      await signInWithRedirect(auth, appleProvider);\n      // The result will be handled in the useEffect checking for redirect results\n    } catch (error) {\n      console.error('Error in Apple login:', error);\n      throw error;\n    }\n  }\n  async function handleSocialSignIn(user) {\n    try {\n      // Check if user already exists in Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (!userDoc.exists()) {\n        // New user, create a document\n        await setDoc(doc(db, 'users', user.uid), {\n          uid: user.uid,\n          name: user.displayName || 'User',\n          email: user.email,\n          role: 'customer',\n          // Default role for social login\n          createdAt: new Date().toISOString(),\n          authProvider: user.providerData[0].providerId\n        });\n      }\n\n      // Get FCM token and update the user document\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken) {\n        await setDoc(doc(db, 'users', user.uid), {\n          fcmToken,\n          lastLogin: new Date().toISOString()\n        }, {\n          merge: true\n        });\n      }\n      toast.success('Login successful!');\n    } catch (error) {\n      console.error('Error in social sign-in:', error);\n      throw error;\n    }\n  }\n  function logout() {\n    return signOut(auth);\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      if (user) {\n        try {\n          // Get user role from Firestore\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setUserRole(userDoc.data().role);\n          } else {\n            setUserRole('customer'); // Default role\n          }\n        } catch (error) {\n          console.error('Error fetching user role:', error);\n          setUserRole('customer'); // Default role on error\n        }\n      } else {\n        setUserRole(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userRole,\n    loading,\n    register,\n    login,\n    loginWithGoogle,\n    loginWithApple,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"Ly56wuyBMKIMYKd7/V6yZ0Re0/E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","signInWithPopup","signInWithRedirect","getRedirectResult","doc","getDoc","setDoc","auth","db","googleProvider","appleProvider","requestNotificationPermission","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","checkRedirectResult","result","user","handleSocialSignIn","error","console","message","register","email","password","name","role","userCredential","displayName","uid","createdAt","Date","toISOString","fcmToken","merge","login","lastLogin","Notification","permission","body","icon","loginWithGoogle","loginWithApple","userDoc","exists","authProvider","providerData","providerId","success","logout","unsubscribe","data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeduruabhiram/Desktop/chiru babai/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile,\n  signInWithPopup,\n  signInWithRedirect,\n  getRedirectResult\n} from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db, googleProvider, appleProvider, requestNotificationPermission } from '../firebase/config';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for redirect result when component mounts (for Apple auth)\n  useEffect(() => {\n    const checkRedirectResult = async () => {\n      try {\n        const result = await getRedirectResult(auth);\n        if (result && result.user) {\n          // Handle the signed-in user information\n          await handleSocialSignIn(result.user);\n        }\n      } catch (error) {\n        console.error(\"Error with redirect sign-in:\", error);\n        toast.error(\"Error with social sign-in: \" + error.message);\n      }\n    };\n    \n    checkRedirectResult();\n  }, []);\n\n  async function register(email, password, name, role = 'customer') {\n    try {\n      // Create user in Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      \n      // Update profile with display name\n      await updateProfile(user, { displayName: name });\n      \n      // Add user data to Firestore\n      await setDoc(doc(db, 'users', user.uid), {\n        uid: user.uid,\n        name,\n        email,\n        role,\n        createdAt: new Date().toISOString()\n      });\n      \n      // Request notification permission and save FCM token\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken) {\n        await setDoc(doc(db, 'users', user.uid), {\n          fcmToken\n        }, { merge: true });\n      }\n      \n      return user;\n    } catch (error) {\n      console.error('Error in register:', error);\n      throw error;\n    }\n  }\n\n  async function login(email, password) {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      \n      // After successful login, request notification permission and save FCM token\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken && userCredential.user) {\n        await setDoc(doc(db, 'users', userCredential.user.uid), {\n          fcmToken,\n          lastLogin: new Date().toISOString()\n        }, { merge: true });\n        \n        // Show welcome back notification\n        if (Notification.permission === 'granted') {\n          new Notification('Welcome back!', {\n            body: `You've successfully logged in to Car Booking App`,\n            icon: '/logo192.png'\n          });\n        }\n      }\n      \n      return userCredential.user;\n    } catch (error) {\n      console.error('Error in login:', error);\n      throw error;\n    }\n  }\n\n  async function loginWithGoogle() {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      await handleSocialSignIn(result.user);\n      return result.user;\n    } catch (error) {\n      console.error('Error in Google login:', error);\n      throw error;\n    }\n  }\n\n  async function loginWithApple() {\n    try {\n      // Apple login works better with redirect on mobile\n      await signInWithRedirect(auth, appleProvider);\n      // The result will be handled in the useEffect checking for redirect results\n    } catch (error) {\n      console.error('Error in Apple login:', error);\n      throw error;\n    }\n  }\n\n  async function handleSocialSignIn(user) {\n    try {\n      // Check if user already exists in Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      \n      if (!userDoc.exists()) {\n        // New user, create a document\n        await setDoc(doc(db, 'users', user.uid), {\n          uid: user.uid,\n          name: user.displayName || 'User',\n          email: user.email,\n          role: 'customer', // Default role for social login\n          createdAt: new Date().toISOString(),\n          authProvider: user.providerData[0].providerId\n        });\n      }\n      \n      // Get FCM token and update the user document\n      const fcmToken = await requestNotificationPermission();\n      if (fcmToken) {\n        await setDoc(doc(db, 'users', user.uid), {\n          fcmToken,\n          lastLogin: new Date().toISOString()\n        }, { merge: true });\n      }\n      \n      toast.success('Login successful!');\n    } catch (error) {\n      console.error('Error in social sign-in:', error);\n      throw error;\n    }\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      setCurrentUser(user);\n      \n      if (user) {\n        try {\n          // Get user role from Firestore\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setUserRole(userDoc.data().role);\n          } else {\n            setUserRole('customer'); // Default role\n          }\n        } catch (error) {\n          console.error('Error fetching user role:', error);\n          setUserRole('customer'); // Default role on error\n        }\n      } else {\n        setUserRole(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    userRole,\n    loading,\n    register,\n    login,\n    loginWithGoogle,\n    loginWithApple,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}